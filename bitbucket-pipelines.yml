image: python:3.8
definitions:
  steps:
    - step: &code-analysis
        name: "Run Static Code Analysis"
        caches:
          - pip
        script:
          - pip install -r requirements/dev.txt
          - echo 'Disabling static code analysis temporarily'
          #- prospector -t dodgy -t pep8 -t profile-validator -t mccabe -t pyflakes

    - step: &run-tests
        name: "Run Tests"
        services:
          - docker
        caches:
          - pip
        script:
          - echo $CREDENTIALS | base64 --decode > tests/assets/integration/credentials.yml ## injects the credentials file
          - pip install --no-cache-dir docker-compose
          - pip install coverage-badge anybadge
          - docker-compose up -d
          - docker-compose exec -T snowshu py.test --cov=snowshu tests/unit --junitxml=test-results/junit_$BITBUCKET_BUILD_NUMBER.xml
        after-script:
          - coverage-badge -o coverage.svg
          - pipe: atlassian/bitbucket-upload-file:0.1.2
            variables:
              BITBUCKET_USERNAME: $BB_USER_NAME
              BITBUCKET_APP_PASSWORD: $BB_APP_PASSWORD
              FILENAME: 'coverage.svg'
          - anybadge --label=pipeline --value=$BITBUCKET_EXIT_CODE --file=pipeline.svg 0=green 1=red
          - pipe: atlassian/bitbucket-upload-file:0.1.2
            variables:
              BITBUCKET_USERNAME: $BB_USER_NAME
              BITBUCKET_APP_PASSWORD: $BB_APP_PASSWORD
              FILENAME: 'pipeline.svg'
        artifacts:
          - coverage.svg
          - pipeline.svg

    - step: &push-to-github
        name: "Push To Github"
        script:
          - git push https://norton120:$GITHUB_API_TOKEN@github.com/Health-Union/snowshu.git $BITBUCKET_BRANCH


pipelines:

  pull-requests:
    '**':
      - parallel:
        - step: *code-analysis
        - step: *run-tests
  tags:
    '**':
      - parallel:
        - step: *code-analysis
        - step: *run-tests
      - step:
          name: 'Publish to PyPi'
          script:
            - echo 'Attempting to deploy to PyPi using atlassian/pypi-publish:0.2.11'
            - pipe: atlassian/pypi-publish:0.2.11
              variables:
                PYPI_USERNAME: 'HealthUnion'
                PYPI_PASSWORD: $PYPI_PASSWORD
      - step:
          name: 'Tags to Github'
          script:
            - git push https://norton120:$GITHUB_API_TOKEN@github.com/Health-Union/snowshu.git --follow-tags

  branches:
    'release/*':
      - step: *push-to-github
    master:
      - step: *push-to-github
